{"version":3,"sources":["github-brands.svg","App.js","Entry.js","reportWebVitals.js","index.js"],"names":["App","useState","entries","setEntries","useEffect","fetch","then","res","json","className","href","src","logo","class","to","map","entry","title","date","ID","Entry","currPath","window","location","split","console","log","entryID","length","history","useHistory","text","setText","display","setDisplay","setTitle","setDate","tags","setTags","setID","getEntryAttributes","prevState","entryTags","event","a","preventDefault","alert","axios","method","url","data","headers","id","push","catch","err","put","type","value","onChange","newTitle","target","required","newText","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.9a738ce7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/github-brands.e2f07326.svg\";","import logo from './github-brands.svg';\nimport './App.scss';\nimport { useEffect, useState } from 'react';\nimport {Link} from 'react-router-dom';\n/*\n* Functions as a view for the AchieverJournal component\n*/\nfunction App() {\n  const [entries,setEntries] = useState([])\n  /*\n  * Retrieves all journal entries from the AchieverJournal API\n  */\n  useEffect(\n    () => {fetch('http://achieverjournal-env.eba-2ezdz2u2.us-east-1.elasticbeanstalk.com/api/v1/entries').\n      then(res => res.json()).\n      then(entries => {setEntries(entries)})\n  },[]\n\n\n  )\n  \n\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <a href=\"https://github.com/3A-2Z\"><img src={logo} class=\"fa-github\"></img></a>\n      \n          <div class=\"container\">\n  <Link to=\"/entry\"><button class=\"new-entry\">Begin Writing Towards Your Goals!</button></Link>\n  <h2>Your Journal Entries!</h2>\n  <ul class=\"responsive-table\">\n    <li class=\"table-header\">\n      <div class=\"col col-1\">Entry Title</div>\n      <div class=\"col col-2\">Date</div>\n      <div class=\"col col-3\">Entry Link</div>\n     \n    </li>\n    {entries.map(entry =>\n    <li class=\"table-row\">\n      <div class=\"col col-1\" >{entry.title}</div>\n      <div class=\"col col-2\" >{entry.date}</div>\n      <div class=\"col col-3\" ><Link to={`/entry/${entry.ID}`}>Go to Entry!</Link></div>{/* links to journal entry based on ID which is sent to the Journal Entry component*/}\n      \n    </li>\n    )}\n    </ul>\n    </div>\n       \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import {Component, useEffect,useState} from 'react'\nimport { Switch,Route,Link } from 'react-router-dom';\nimport {useHistory} from 'react-router-dom'\nimport './test.css';\nimport axios from 'axios'\nimport { wait, waitFor } from '@testing-library/react';\n/*\n* Functions as a view for the JournalEntry component\n*/\nfunction Entry(){\n    \n    let currPath = window.location.href.split(\"#/\")[1].split(\"/\")\n    console.log(currPath)\n    let entryID = \" \"\n    entryID = (currPath.length === 2)? currPath[1] : currPath[0] // Parses the URL for an journal entry ID to be used in the fetching of any changes to that entry\n    const history = useHistory()//tags on journal id to URL upon posting of new entry\n    const [text,setText] = useState(\"\")\n    const [display,setDisplay] = useState(entryID === 'entry' ? true : false) // changes the mode of the journal entry for viewing or editing\n    const [title,setTitle] = useState(\"\")\n    const [date,setDate] = useState(\"\")\n    const [tags,setTags] = useState(\"\")\n    const [ID,setID] = useState('')\n    /*\n    *   Sets all attributes from the retrived journal entry json that are to be displayed in the JournalEntry component view\n    */\n    function getEntryAttributes(entry){\n        setText(prevState => entry.text) \n        setTitle(prevState => entry.title)\n        setDate(prevState => entry.date)\n        setTags(prevState => entry.entryTags)\n\n    }\n   \n    useEffect(\n       () => fetch(`http://journalentry-env.eba-xri3y22g.us-east-1.elasticbeanstalk.com/${entryID}`).then(res => res.json()).then(entry => getEntryAttributes(entry)),[]\n    )\n    \n    \n    \n    async function HandleClick(event){\n        let jsonData = {\"ID\":\"\",\"title\":title,\"text\":text} //Data to be sent to the JournalEntry API  to either insert into the dabase or update an existing journal\n        \n        event.preventDefault();\n        \n        if(entryID === 'entry' && display){ //Condition to insert a new journal entry (no entry ID provided within the URL)\n            if(title.length === 0 || text.length === 0){\n                alert(\"Please fill out the entry in full\")//prevent submission of empty journal\n                return\n            }\n            await axios({\n                method: 'post',\n                url: 'http://journalentry-env.eba-xri3y22g.us-east-1.elasticbeanstalk.com/api/v1/addentry', \n                data: {\"ID\":\"\",\"title\":title,\"text\":text,}, \n                headers:{\n                \"Content-Type\":'application/json',\n                'Access-Control-Allow-Origin': '*',\n                }}\n            ).then(async res => res.data).then( async id => { \n                setID(prevState => id);entryID=id;console.log(id);              \n           await fetch(`http://journalentry-env.eba-xri3y22g.us-east-1.elasticbeanstalk.com/${id}`).then(res => res.json()).then(entry => getEntryAttributes(entry));\n            history.push(`/entry/${id}`);        \n        })     \n            .catch( err => console.log(err))\n            \n            \n           \n            \n            \n            \n\n        }\n        else if(display){//condition to update and existing journal\n            if(title.length === 0 || text.length === 0){\n                alert(\"Please fill out the entry in full\")\n                return\n            }\n            await axios.put(`http://journalentry-env.eba-xri3y22g.us-east-1.elasticbeanstalk.com/put/${entryID}`, \n              {\"text\":text,\"title\":title}\n            ,{\n                headers:{\n                \"Content-Type\":\"application/json\",\n                'Access-Control-Allow-Origin': '*',}}\n            ).then( res => {console.log(res);\n            fetch(`http://journalentry-env.eba-xri3y22g.us-east-1.elasticbeanstalk.com/${entryID}`).then(res => res.json()).then(entry => getEntryAttributes(entry));\n            \n            })\n            .catch( err => console.log(err))\n        }\n        setDisplay(prevState => !prevState);\n\n\n    }\n   \n    return (\n       <form>\n        {display?\n        <div>\n       <h1>\n           <div class=\"question\">\n            <input\n                class=\"question\"\n                type=\"text\"\n                value={title}\n                onChange = {newTitle => {setTitle(prevState => newTitle.target.value);console.log(title)}} required/>\n                <label>Entry Title</label>\n            </div>\n           \n           \n        </h1>\n        <h3>Last Updated:{date}</h3>\n        <div class=\"text\">\n            <textarea\n            \n            type=\"text\"\n            value={text}\n            onChange={newText => {setText(prevState => newText.target.value);console.log(text);}}></textarea>\n            </div>\n        </div>\n        :\n        <div>\n            <h1>{title}</h1>\n            <h3>Last Updated:{date}</h3>\n            <p >{text}</p>\n       </div> \n        }\n        <div>\n            <span>\n                <h1>What's on your mind!</h1>\n                <br />\n                <p>{tags}</p>\n            </span>\n        </div>\n        <button onClick = {HandleClick}>Edit</button>\n        <br />   \n        <Link to=\"/journal\"><button>Back to Entries</button></Link>\n        </form>\n        \n\n    )\n\n\n\n}\nexport default Entry","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Entry from './Entry'\nimport reportWebVitals from './reportWebVitals';\nimport { Switch,Route,Link, HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <Route path=\"/journal\" component = {App} />\n    <Route path=\"/entry\" component = {Entry} />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}